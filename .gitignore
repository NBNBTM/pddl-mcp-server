# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore the entire .idea directory.
.idea/

# Visual Studio Code
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk
Desktop.ini
$RECYCLE.BIN/

# Linux
*~

# Project specific

# PDDL MCP Server specific files
output/
fast-downward/
fd/
planner/

# Generated PDDL files
*.pddl.tmp
*.pddl.bak
sas_plan*
plan.txt
plan_*.txt

# Planning output
output/plan/*.txt
output/explanation/*.txt
output/pddl/*.pddl
output/report.json
output/report.md

# Temporary files
*.tmp
*.temp
*.bak
*.backup

# Log files
*.log
logs/

# Configuration files with sensitive data
config.local.json
.env.local
.env.*.local
secrets.json

# Test files
test_output/
test_results/
.coverage
coverage.xml
htmlcov/

# Documentation build
docs/_build/
docs/build/
site/

# Package files
*.tar.gz
*.zip
*.rar
*.7z

# Database files
*.db
*.sqlite
*.sqlite3

# Cache directories
.cache/
__pycache__/
.pytest_cache/

# IDE specific
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json
.idea/
*.sublime-project
*.sublime-workspace

# Jupyter
.ipynb_checkpoints/
*.ipynb

# FastMCP specific
.mcp_cache/
mcp_logs/

# PDDL planners
fast-downward/
metric-ff/
lpg/
ff/

# Benchmark results
benchmark_results/
performance_logs/

# Security
*.key
*.pem
*.crt
*.p12
*.pfx

# Local development
local/
dev/
scratch/
playground/

# Backup files
*.orig
*.rej

# Compiled documentation
*.pdf
*.epub
*.mobi

# Node.js (if any frontend components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Docker
.dockerignore
Dockerfile.local
docker-compose.override.yml

# Kubernetes
*.kubeconfig

# Terraform
*.tfstate
*.tfstate.*
.terraform/

# Local configuration overrides
config.override.json
settings.local.json

# Performance profiling
*.prof
*.profile

# Memory dumps
*.hprof
*.dump

# Large files that shouldn't be in git
*.large
*.big

# Temporary directories
tmp/
temp/

# Editor backups
*~
.#*
\#*#
.*.swp
.*.swo

# macOS
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk